plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group 'de.geolykt'
def archivesBaseName = 'feedbackvectors'
version '1.0.0'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '11'

repositories {
    maven {
        name 'geolykt'
        url 'https://geolykt.de/maven'
    }
    maven {
        name 'sponge'
        url 'https://repo.spongepowered.org/maven'
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    api "de.geolykt:starloader:2.1.0" // The minimalistic starloader base "api" as well all of it's depends
    api "de.geolykt:starloader-api:1.5.0" // the starloader main API.
}

javadoc {
    options {
        addBooleanOption('html5', true)
        tags("apiNote:a:API Notice:", "implSpec:a:Implementation Specification:", "implNote:a:Implementation Notice:")
        links "https://docs.oracle.com/en/java/javase/16/docs/api/"
    }

    // see https://stackoverflow.com/a/56641766
    doLast {
        // Append the fix to the file
        def searchScript = new File(destinationDir, '/search.js')
        searchScript.append '\n\n' +
            'getURLPrefix = function(ui) {\n' +
            '    return \'\';\n' +
            '};\n'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        plugin(MavenPublication) { publication ->
            groupId project.group
            artifactId project.archivesBaseName
            version '1.0.0'

            from components['java']

            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        mavenLocal()
    }
}
